
additionalVolumes: &additional-volumes
  datadir:
    persistentVolumeClaim:
      claimName: gs-cloud-datadir-nfs-claim
  cache:
    persistentVolumeClaim:
      claimName: gs-cloud-gwc-cache-nfs-claim
  geodata:
    configMap:
      name: cm-jndi-geodata

additionalVolumeMounts: &additional-volume-mounts
  /opt/app/data_directory:
    name: "datadir"
  /mnt/cache:
    name: "cache"
  /custom/geodata:
    name: "geodata"
    readOnly: true

env: &env-override
  RABBITMQ_HOST:
    value: "gs-cloud-common-rabbitmq"
  RABBITMQ_USER:
    value: "geoserver"
  RABBITMQ_PASSWORD:
    type: secret
    name: "gs-cloud-common-rabbitmq"
    key: "rabbitmq-password"
  SPRING_PROFILES_ACTIVE:
    value: standalone,datadir
  GEOWEBCACHE_CACHE_DIR:
    value: "/mnt/cache"
  JAVA_OPTS:
    value: "$(JAVA_OPTS_DEFAULT) -Dspring.config.additional-location=optional:file:/custom/geodata/jndi.yml"
  SERVICE_ACL_NAME:
    type: "configMap"
    name: self
    key: SERVICE_ACL_NAME
  TARGETS_ACL:
    order: 1
    value: "http://$(SERVICE_ACL_NAME):8080"
  GEOSERVER_ACL_ENABLED:
    value: "true"
  GEOSERVER_ACL_CLIENT_BASEPATH:
    order: 1
    value: "http://$(SERVICE_ACL_NAME):8080/acl/api"
  GEOSERVER_ACL_CLIENT_USERNAME:
    value: "admin"
  GEOSERVER_ACL_CLIENT_PASSWORD:
    value: "s3cr3t"
  GEOSERVER_ACL_CLIENT_DEBUG:
    value: "false"
  GEOSERVER_WEB_UI_ACL_ENABLED:
    value: "true"

additional-stuff: &additional-stuff
  volumes:
    <<: *additional-volumes
  containers:
    spring:
      image:
        tag: "1.1.0"
      env:
        <<: *env-override
      volumeMounts:
        <<: *additional-volume-mounts

geoservercloud:
  global:
    profile: standalone,datadir
    image:
      pullPolicy: IfNotPresent
  geoserver:
    # podSecurityContext:
    #   runAsUser: 1001
    #   runAsGroup: 1001
    #   fsGroup: 1001
    ingress:
      annotations:
        my-annotation: 'coucou'
      enabled: true
      hostGroups:
        host1:
          tls:
            enabled: false
          hosts:
            - gscloud.local
    services:
      acl:
        enabled: true
        ingress:
          enabled: false
        template: true
        replicaCount: 1
        nameOverride: "gsc"
        releaseTrunc: 45
        prefixTrunc: 51
        initContainers: {}
        nodeSelector: {}
        affinity: {}
        service:
          type: ClusterIP
          servicePort: 8080
          ports:
            - name: http
              port: 8080
              protocol: TCP
              targetPort: http
        volumes:
          jndi:
            configMap:
              name: cm-jndi-acl
          # this comes from the config initContainer
          vol-local-gscloud:
            emptyDir: {}
          # /tmp as emptyDir, required if running with readOnlyRootFilesystem=true
          tmp-empty-dir:
            emptyDir: {}
        containers:
          spring:
            # command:
            #   - /bin/bash
            #   - -c
            #   - "sleep infinity"
            resources:
              requests:
                memory: 512Mi
                cpu: 0.1
              limits:
                memory: 4Gi
                cpu: 4.0
            ports:
              http:
                containerPort: 8080
                hostIP: 127.0.0.1
            volumeMounts:
              /opt/config:
                name: "jndi"
                readOnly: true
              /etc/localconfig:
                name: vol-local-gscloud
              # /tmp as emptyDir, required if running with readOnlyRootFilesystem=true
              /tmp/:
                name: "tmp-empty-dir"
            env:
              SPRING_CONFIG_ADDITIONAL_LOCATION:
                value: "file:/opt/config/acl.yml"
            livenessProbe:
              httpGet:
                path: /acl/actuator/health/liveness
                port: http
              periodSeconds: 10
              failureThreshold: 10
              initialDelaySeconds: 30
            readinessProbe:
              httpGet:
                path: /acl/actuator/health/readiness
                port: http
              periodSeconds: 5
            image:
              tag: "1.0.0"
              repository: geoservercloud/geoserver-acl
              sha: ''
      gateway:
        volumes:
          gateway:
            configMap:
              name: cm-gateway-spring
        containers:
          spring:
            env:
              SPRING_CONFIG_LOCATION:
                value: /opt/config/gateway-service.yml
              SPRING_PROFILES_ACTIVE:
                value: "authgoogle,authgithub"
              # add other things
            image:
              tag: "8b7a25b9"
              repository: "groldan/georchestra-gateway"
              sha: ''
            volumeMounts:
              /opt/config:
                name: gateway
        service:
          annotations:
            my-custom-annotation: 'hello'
          labels:
            one-custom-label: 'my-label'
        ingress:
          enabled: true
        <<: *additional-stuff
      webui:
        <<: *additional-stuff
      rest:
        <<: *additional-stuff
      wms:
        replicaCount: 2
        <<: *additional-stuff
      wcs:
        <<: *additional-stuff
      wfs:
        replicaCount: 2
        <<: *additional-stuff
      gwc:
        replicaCount: 2
        <<: *additional-stuff
